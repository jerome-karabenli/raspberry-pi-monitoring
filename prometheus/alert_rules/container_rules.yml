groups:
- name: Container
  rules:
  ########## SEVERITY = CRITICAL #############
  # CONTAINER DOWN
  - alert: ContainerKilledFront
    expr: count(time() - container_last_seen{name !=""} > 20) by (name)
    for: 0m
    labels:
      severity: critical
    annotations:
      title: Container not seen more than 20s
      description: "A container has disappeared\n  VALUE = {{ labels.name }}"

  # CONTAINER UNHEALTHY
  - alert: ContainerHunhealthy
    expr: count(container_state_health_status{status!~"healthy|none", name =~ ".+"} == 1) by (name, status)
    for: 2m
    labels:
      severity: critical
    annotations:
      title: Container Unhealthy (instance {{ $labels.instance }})
      description: "Container is unhealthy {{ $labels.name }}\n  VALUE = {{ $labels.status }}"

  # CONTAINER RESTART COUNT
  - alert: ContainerRestartCount
    expr: sum(changes(container_state_startedat{name != ""}[1d])) by (name) >= 2
    for: 0m
    labels:
      severity: critical
    annotations:
      title: Container restart count (instance {{ $labels.instance }})
      description: "Container restarted {{ $labels.name }}\n  VALUE = {{ $value }}"

  # CONTAINER CPU USAGE TOO HIGH
  - alert: ContainerCpuUsage
    expr: (sum(rate(container_cpu_usage_seconds_total{name!=""}[5m])) BY (instance, name) * 100) >= 50
    for: 2m
    labels:
      severity: critical
    annotations:
      title: Container CPU usage (instance {{ $labels.instance }})
      description: "Container CPU usage is above 50%\n  VALUE = {{ $value }}"

  # CONTAINER MEMORY USAGE TOO HIGH
  - alert: ContainerMemoryUsage
    expr: avg((avg_over_time(container_memory_usage_bytes{name!=""}[5m]) / container_spec_memory_limit_bytes) * 100) by (name, instance) > 80
    for: 0m
    labels:
      severity: critical
    annotations:
      title: Container Memory usage (instance {{ $labels.instance }})
      description: "Container Memory usage is above 80%\n  VALUE = {{ $value }} \n CONTAINER = {{ $labels.name }}"

  ######### SEVERITY == WARNING ############

  # CONTAINER RESTART COUNT
  - alert: ContainerRestartCount
    expr: sum(changes(container_state_startedat{name != ""}[1d])) by (name) == 1
    for: 0m
    labels:
      severity: warning
    annotations:
      title: Container restart count (instance {{ $labels.instance }})
      description: "Container restarted {{ $labels.name }}\n  VALUE = {{ $value }}"

  # CONTAINER CPU USAGE TOO HIGH
  - alert: ContainerCpuUsage 
    expr: (sum(rate(container_cpu_usage_seconds_total{name!=""}[1m])) BY (instance, name) * 100) >= 25 < 50
    for: 2m
    labels:
      severity: warning
    annotations:
      title: Container CPU usage (instance {{ $labels.instance }})
      description: "Container CPU usage is above 25%\n  VALUE = {{ $value }}"

  # CONTAINER MEMORY USAGE TOO HIGH
  - alert: ContainerMemoryUsage
    expr: avg((avg_over_time(container_memory_usage_bytes{name != ""}[5m]) / container_spec_memory_limit_bytes) * 100) by (name, instance) > 50
    for: 0m
    labels:
      severity: warning
    annotations:
      title: Container Memory usage (instance {{ $labels.instance }})
      description: "Container Memory usage is above 50%\n  VALUE = {{ $value }} \n CONTAINER = {{ $labels.name }}"


  ############ SEVERITY == INFO ################
  # CONTAINER CPU USAGE TOO HIGH
  - alert: ContainerCpuUsage
    expr: (sum(rate(container_cpu_usage_seconds_total{name!=""}[5m])) BY (instance, name) * 100) > 10 < 25
    for: 2m
    labels:
      severity: info
    annotations:
      title: Container CPU usage (instance {{ $labels.instance }})
      description: "Container CPU usage is above 10%\n  VALUE = {{ $value }}"

  # CONTAINER MEMORY USAGE TOO HIGH
  - alert: ContainerMemoryUsage
    expr: avg((avg_over_time(container_memory_usage_bytes{name != ""}[5m]) / container_spec_memory_limit_bytes) * 100) by (name, instance) > 20
    for: 0m
    labels:
      severity: warning 
    annotations:
      title: Container Memory usage (instance {{ $labels.instance }})
      description: "Container Memory usage is above 20%\n  VALUE = {{ $value }} \n CONTAINER = {{ $labels.name }}"
